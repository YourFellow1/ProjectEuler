/**
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 * The first ten terms would be:
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * 
 * 1: 1
 * 3: 1, 3
 * 6: 1, 2, 3, 6
 * 10: 1, 2, 5, 10
 * 15: 1, 3, 5, 15
 * 21: 1, 3, 7, 21
 * 28: 1, 2, 4, 7, 14, 28
 * 
 * So 28 is the first triangle number to have over five divisors.
 * 
 * What is the value of the first triangle number to have over five hundred divisors?
 */

function getDivisors(num) {
    let divisors = [];
    let latest = num;
    for (let i = 1; i < latest; i++) {
        if (num % i === 0) {
            divisors.push(i);
            latest = num / i;
            divisors.push(latest);
        }
    }
    // let sorted = divisors.sort((a, b) => a - b); 
    // console.log(`Divisors of ${num}: ${sorted}`);
    return divisors;
}

console.log('working');

console.log("Working on problem 12");
let latest = 1;
let triangle = 1;



for (let i = 2; i < 25000000; i += 1) {
    triangle += i;
    let divisors = getDivisors(triangle);

    if (divisors.length >= 500) {
        console.log(`Triangle number ${triangle} has ${divisors.length} divisors`);
        break;
    }
    
}

//76576500 is the answer and it's correct! javascript is soooo much easier.